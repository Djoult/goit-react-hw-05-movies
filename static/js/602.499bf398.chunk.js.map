{"version":3,"file":"static/js/602.499bf398.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Layout/Layout.styled.jsx","components/Layout/Layout.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","components/Loader/Loader.jsx","components/Movie/Movie.styled.jsx","components/Movie/Movie.jsx","components/Actor/Actor.styled.jsx","components/Actor/Actor.jsx","components/ReviewItem/ReviewItem.styled.jsx","components/ReviewItem/ReviewItem.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 24px;\n  margin-bottom: 32px;\n`;\n\nexport const NoInfo = styled.p`\n  color: black;\n  font-size: 24px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'services/movieAPI/movieAPI';\nimport { Actor } from 'components';\nimport { NoInfo, List } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchCast(movieId).then(setCast).catch(console.log);\n  }, [movieId]);\n\n  return (\n    <>\n      {cast.length ? (\n        <List>\n          {cast.map(actorInfo => (\n            <Actor key={actorInfo.id} {...actorInfo} />\n          ))}\n        </List>\n      ) : (\n        <NoInfo>There are not information about movie cast </NoInfo>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n\nexport const Header = styled.header`\n  position: sticky;\n  top: 0;\n  padding: 10px;\n  z-index: 2;\n  background-color: rgba(32, 6, 98, 0.9);\n`;\n\nexport const Nav = styled.nav`\n  display: flex;\n  align-items: baseline;\n  gap: 30px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: #ffffff;\n  text-decoration: none;\n\n  &.active {\n    color: #9d28b4;\n    font-weight: 500;\n  }\n`;\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Container, Header, Nav, StyledLink } from './Layout.styled';\n\nconst Layout = () => {\n  return (\n    <>\n      <Header>\n        <Container>\n          <Nav>\n            <StyledLink to=\"/\">Home</StyledLink>\n            <StyledLink to=\"/movies\">Movies</StyledLink>\n          </Nav>\n        </Container>\n      </Header>\n      <main>\n        <Container padding>\n          <Suspense fallback={<div>Wait</div>}>\n            <Outlet />\n          </Suspense>\n        </Container>\n      </main>\n    </>\n  );\n};\n\nexport default Layout;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin-top: 32px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 195px);\n  gap: 24px;\n`;\n\nexport const Item = styled.li`\n  font-size: 12px;\n  border: 1px solid transparent;\n  transition: transform 0.3s cubic-bezier(0.7, 0.98, 0.86, 0.98),\n    box-shadow 0.3s cubic-bezier(0.7, 0.98, 0.86, 0.98),\n    border-color 0.3s cubic-bezier(0.7, 0.98, 0.86, 0.98);\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    border-color: #958c8c;\n  }\n  overflow: hidden;\n  border-radius: 12px;\n`;\n\nexport const Img = styled.img`\n  width: 195px;\n  height: 225px;\n  /* object-fit: cover; */\n`;\n\nexport const Title = styled.h2`\n  /* height: 40px; */\n  padding: 6px;\n  color: #0d0080;\n  background-color: transparent;\n`;\nexport const Release = styled.p`\n  width: 80px;\n  margin-left: auto;\n  font-weight: 500;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Img, Item, Title, Release } from './MovieList.styled';\nimport { format } from 'date-fns';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  const getDate = date => {\n    if (!date) return 'Who knows?';\n    return format(new Date(Date.parse(date)), 'dd.MM.yyyy');\n  };\n  return (\n    <List>\n      {movies.map(({ id, titleName, src, release_date }) => {\n        return (\n          <Item tabIndex={1} key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <Img src={src} alt={titleName} />\n              <Title>{titleName}</Title>\n              <Release> {getDate(release_date)}</Release>\n            </Link>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      titleName: PropTypes.string.isRequired,\n      src: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  color: #100d0d;\n  display: flex;\n  flex-direction: column;\n  gap: 7px;\n  margin-bottom: 24px;\n`;\n\nexport const NoInfo = styled.p`\n  color: black;\n  font-size: 24px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/movieAPI/movieAPI';\nimport { ReviewItem } from 'components';\nimport { List, NoInfo } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchReviews(movieId)\n      .then(data => {\n        setReviews(data);\n      })\n      .catch(console.log);\n  }, [movieId]);\n  return (\n    <>\n      {reviews.length ? (\n        <List>\n          {reviews.map(review => (\n            <ReviewItem key={review.id} {...review} />\n          ))}\n        </List>\n      ) : (\n        <NoInfo>There are not any reviews for this movie yet </NoInfo>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import { Dna } from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\n\nconst Loader = ({ visible }) => {\n  return (\n    <Dna\n      height=\"90\"\n      width=\"90\"\n      color=\"#232caa\"\n      ariaLabel=\"tail-spin-loading\"\n      radius=\"1\"\n      visible={visible}\n    />\n  );\n};\n\nLoader.propTypes = {\n  visible: PropTypes.bool.isRequired,\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\n\nexport const OutsideWrap = styled.div`\n  display: flex;\n  gap: 24px;\n  padding: 16px;\n  background-color: #1a217a;\n  border-radius: 16px;\n`;\n\nexport const ImgWrap = styled.div``;\n\nexport const Img = styled.img`\n  width: 350px;\n  height: 400px;\n  /* object-fit: cover; */\n`;\n\nexport const InsideWrap = styled.div`\n  font-size: 16px;\n  color: white;\n`;\n\nexport const MovieTitle = styled.h2`\n  margin-bottom: 4px;\n\n  font-size: 32px;\n  color: white;\n`;\nexport const Year = styled.p`\n  margin-bottom: 8px;\n`;\n\nexport const Span = styled.span`\n  color: #c8c82f;\n  color: ${props => props.rating > 60 && 'green'};\n  color: ${props => Number(props.rating) < 45 && 'red'};\n`;\n\nexport const SubTitle = styled.h3`\n  margin-top: 16px;\n  margin-bottom: 4px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 8px;\n  color: #2bc098;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  Img,\n  ImgWrap,\n  InsideWrap,\n  List,\n  MovieTitle,\n  OutsideWrap,\n  Span,\n  SubTitle,\n  Year,\n} from './Movie.styled';\n\nconst Movie = ({ movieData }) => {\n  return (\n    <>\n      <OutsideWrap>\n        <ImgWrap>\n          <Img src={movieData.src} alt={movieData.title} />\n        </ImgWrap>\n        <InsideWrap>\n          <MovieTitle>{movieData.title}</MovieTitle>\n          <Year>({movieData.release_date})</Year>\n          <div>\n            <p>\n              User score:{' '}\n              <Span rating={movieData.userScore}>{movieData.userScore}%</Span>\n            </p>\n            <SubTitle>Overview</SubTitle>\n            <p>{movieData.overview}</p>\n            <SubTitle>Genres</SubTitle>\n            <List>{movieData.genresList}</List>\n          </div>\n        </InsideWrap>\n      </OutsideWrap>\n    </>\n  );\n};\n\nMovie.propTypes = {\n  movieData: PropTypes.shape({\n    title: PropTypes.string,\n    src: PropTypes.string.isRequired,\n    userScore: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genresList: PropTypes.array.isRequired,\n  }).isRequired,\n};\n\nexport default Movie;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li``;\n\nexport const Img = styled.img`\n  margin-bottom: 4px;\n\n  width: 100px;\n  height: 150px;\n  object-fit: cover;\n  border-radius: 12px;\n`;\n\nexport const Name = styled.h3`\n  margin-bottom: 2px;\n  width: 40px;\n  font-style: italic;\n  font-size: 14px;\n  color: black;\n`;\n\nexport const Role = styled.p`\n  width: 40px;\n  font-weight: 700;\n  font-style: italic;\n  color: #4e2bc0;\n`;\n","import PropTypes from 'prop-types';\nimport { Img, Item, Name, Role } from './Actor.styled';\n\nconst Actor = ({ name, character, src }) => {\n  return (\n    <Item>\n      <Img src={src} alt={name} />\n      <Name>{name}</Name>\n      <Role>{character}</Role>\n    </Item>\n  );\n};\n\nActor.propTypes = {\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired,\n};\n\nexport default Actor;\n","import styled from '@emotion/styled';\nimport { BsPersonFill } from 'react-icons/bs';\n\nexport const Item = styled.li``;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 8px;\n`;\nexport const StyledIcon = styled(BsPersonFill)`\n  color: ${props => props.inputcolor || 'palevioletred'};\n`;\n\nexport const Title = styled.h3`\n  color: #434245;\n`;\n\nexport const Content = styled.p`\n  color: #968787;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Content, Item, StyledIcon, Title, Wrapper } from './ReviewItem.styled';\n\nconst ReviewItem = ({ author, content }) => {\n  return (\n    <Item>\n      <Wrapper>\n        <StyledIcon\n          inputcolor={`#${Math.floor(Math.random() * 16777215).toString(16)}`}\n        />\n        <Title>{author}</Title>\n      </Wrapper>\n      <Content>{content}</Content>\n    </Item>\n  );\n};\n\nReviewItem.propTypes = {\n  author: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n\nexport default ReviewItem;\n","import styled from '@emotion/styled';\n\nexport const StyledForm = styled.form`\n  margin-bottom: 32px;\n  display: flex;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  padding: 8px;\n  border-radius: 1px;\n  width: 200px;\n  font-family: inherit;\n  font-size: 14px;\n  transition: box-shadow 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n\n  :hover,\n  :focus {\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  height: 40px;\n  width: 40px;\n  font-weight: 700;\n\n  color: white;\n  background-color: #4e4ebc;\n  transition: background-color 250ms cubic-bezier(0.075, 0.82, 0.165, 1),\n    color 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n\n  :hover,\n  :focus {\n    background-color: #299cb9;\n    color: #140707;\n  }\n`;\n","import { useForm } from 'react-hook-form';\nimport { Button, Input, StyledForm } from './Form.styled';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nconst Form = ({ updateParams }) => {\n  const { register, handleSubmit, reset } = useForm();\n\n  const onSubmit = data => {\n    updateParams(data);\n    reset({ query: '' });\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit(onSubmit)}>\n      <Input {...register('query', { required: true })} />\n      <Button type=\"submit\">\n        <AiOutlineSearch />\n      </Button>\n    </StyledForm>\n  );\n};\n\nexport default Form;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Form from 'components/Form/Form';\nimport { Loader } from 'components';\nimport { fetchMoviesByName } from 'services/movieAPI/movieAPI';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const [movies, setMovies] = useState([]);\n  const [showLoader, setShowLoader] = useState(false);\n\n  useEffect(() => {\n    if (!query) return;\n\n    fetchMoviesByName(query)\n      .then(setMovies)\n      .finally(() => setShowLoader(false));\n  }, [query]);\n\n  const updateParams = params => {\n    setSearchParams(params);\n  };\n\n  return (\n    <section>\n      <Form updateParams={updateParams} />\n      <Loader visible={showLoader} />\n      {query && <MovieList movies={movies} />}\n    </section>\n  );\n};\n\nexport default Movies;\n"],"names":["List","styled","NoInfo","movieId","useParams","useState","cast","setCast","useEffect","fetchCast","then","catch","console","log","length","map","actorInfo","id","Container","Header","Nav","StyledLink","NavLink","to","padding","Suspense","fallback","Item","Img","Title","Release","MovieList","movies","location","useLocation","date","titleName","src","release_date","tabIndex","state","from","alt","format","Date","parse","reviews","setReviews","fetchReviews","data","review","visible","height","width","color","ariaLabel","radius","OutsideWrap","ImgWrap","InsideWrap","MovieTitle","Year","Span","props","rating","Number","SubTitle","movieData","title","userScore","overview","genresList","Name","Role","name","character","Wrapper","StyledIcon","BsPersonFill","inputcolor","Content","author","content","Math","floor","random","toString","StyledForm","Input","Button","updateParams","useForm","register","handleSubmit","reset","onSubmit","query","required","type","useSearchParams","searchParams","setSearchParams","get","setMovies","showLoader","setShowLoader","fetchMoviesByName","finally","params"],"sourceRoot":""}